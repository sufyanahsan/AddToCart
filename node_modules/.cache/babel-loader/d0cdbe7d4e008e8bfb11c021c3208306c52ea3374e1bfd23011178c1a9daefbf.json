{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/Task/task/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport data from \"./component/backend Data/data\";\nimport Header from \"./component/front/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./component/Routes/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const {\n    productItems\n  } = data;\n  const handleadd = product => {\n    const ProductExit = items.find(item => item.id === product.id);\n    if (ProductExit) {\n      setItems(items.map(item => item.id === product.id ? {\n        ...ProductExit,\n        quantity: ProductExit.quantity + 1\n      } : item));\n    } else {\n      setItems([...items, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const handleremove = product => {\n    const ProductExit = items.find(item => item.id === product.id);\n    if (ProductExit.quantity === 1) {\n      setItems(items.filter(item => item.id !== product.id));\n    } else {\n      setItems(items.map(item => item.id === product.id ? {\n        ...ProductExit,\n        quantity: ProductExit.quantity - 1\n      } : item));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        productItems: productItems,\n        items: items,\n        handleadd: handleadd,\n        handleremove: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","data","Header","BrowserRouter","Router","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","items","setItems","productItems","handleadd","product","ProductExit","find","item","id","map","quantity","handleremove","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/enigmatix/Desktop/Task/task/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport data from \"./component/backend Data/data\";\nimport Header from \"./component/front/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./component/Routes/Routes\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const { productItems } = data;\n\n  const handleadd = (product) => {\n    const ProductExit = items.find((item) => item.id === product.id);\n    if (ProductExit) {\n      setItems(\n        items.map((item) =>\n          item.id === product.id\n            ? { ...ProductExit, quantity: ProductExit.quantity + 1 }\n            : item\n        )\n      );\n    } else {\n      setItems([...items, { ...product, quantity: 1 }]);\n    }\n  };\n\n  const handleremove = (product) => {\n    const ProductExit = items.find((item) => item.id === product.id);\n    if (ProductExit.quantity === 1) {\n      setItems(items.filter((item) => item.id !== product.id));\n    } else {\n      setItems(\n        items.map((item) =>\n          item.id === product.id\n            ? { ...ProductExit, quantity: ProductExit.quantity - 1 }\n            : item\n        )\n      );\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Header />\n        <Routes\n          productItems={productItems}\n          items={items}\n          handleadd={handleadd}\n          handleremove\n        />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,+BAA+B;AAChD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEc;EAAa,CAAC,GAAGb,IAAI;EAE7B,MAAMc,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,WAAW,GAAGL,KAAK,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAChE,IAAIH,WAAW,EAAE;MACfJ,QAAQ,CACND,KAAK,CAACS,GAAG,CAAEF,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAE,GAAGH,WAAW;QAAEK,QAAQ,EAAEL,WAAW,CAACK,QAAQ,GAAG;MAAE,CAAC,GACtDH,IAAI,CACT,CACF;IACH,CAAC,MAAM;MACLN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAE,GAAGI,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,YAAY,GAAIP,OAAO,IAAK;IAChC,MAAMC,WAAW,GAAGL,KAAK,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAChE,IAAIH,WAAW,CAACK,QAAQ,KAAK,CAAC,EAAE;MAC9BT,QAAQ,CAACD,KAAK,CAACY,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC,CAAC;IAC1D,CAAC,MAAM;MACLP,QAAQ,CACND,KAAK,CAACS,GAAG,CAAEF,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAE,GAAGH,WAAW;QAAEK,QAAQ,EAAEL,WAAW,CAACK,QAAQ,GAAG;MAAE,CAAC,GACtDH,IAAI,CACT,CACF;IACH;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACH,MAAM;MAAAqB,QAAA,gBACLlB,OAAA,CAACL,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACVtB,OAAA,CAACF,MAAM;QACLS,YAAY,EAAEA,YAAa;QAC3BF,KAAK,EAAEA,KAAM;QACbG,SAAS,EAAEA,SAAU;QACrBQ,YAAY;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK,iBACR;AAEP;AAAClB,EAAA,CA/CQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}