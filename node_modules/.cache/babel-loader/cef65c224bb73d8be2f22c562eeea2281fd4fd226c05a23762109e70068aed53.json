{"ast":null,"code":"import { toJS } from \"mobx\";\nimport { flow, types } from \"mobx-state-tree\";\nimport axios from \"axios\";\nconst todo = types.model({\n  id: types.number,\n  todo: types.string,\n  completed: types.boolean,\n  userId: types.number\n});\nconst MobxStore = types.model({\n  todoList: types.array(todo)\n}).actions(self => ({\n  loadTodos: flow(function* loadTodos() {\n    let res = yield axios.get(\"https://dummyjson.com/todos\");\n    self.todoList = res.data.todos;\n    console.log(\"mox\", res.data.todos);\n    return res.data.todos;\n  })\n})).views(_c = self => ({\n  getTodo() {\n    return toJS(self.todoList);\n  }\n}));\n_c2 = MobxStore;\nconst store = MobxStore.create({});\nexport default store;\nvar _c, _c2;\n$RefreshReg$(_c, \"MobxStore$types\\n  .model({\\n    todoList: types.array(todo),\\n  })\\n\\n  .actions((self) => ({\\n    loadTodos: flow(function* loadTodos() {\\n      let res = yield axios.get(\\\"https://dummyjson.com/todos\\\");\\n      self.todoList = res.data.todos;\\n\\n      console.log(\\\"mox\\\", res.data.todos);\\n\\n      return res.data.todos;\\n    }),\\n  }))\\n\\n  .views\");\n$RefreshReg$(_c2, \"MobxStore\");","map":{"version":3,"names":["toJS","flow","types","axios","todo","model","id","number","string","completed","boolean","userId","MobxStore","todoList","array","actions","self","loadTodos","res","get","data","todos","console","log","views","_c","getTodo","_c2","store","create","$RefreshReg$"],"sources":["/home/enigmatix/Desktop/Task/task/src/Mobx/Mobx.js"],"sourcesContent":["import { toJS } from \"mobx\";\nimport { flow, types } from \"mobx-state-tree\";\nimport axios from \"axios\";\n\nconst todo = types.model({\n  id: types.number,\n  todo: types.string,\n  completed: types.boolean,\n  userId: types.number,\n});\n\nconst MobxStore = types\n  .model({\n    todoList: types.array(todo),\n  })\n\n  .actions((self) => ({\n    loadTodos: flow(function* loadTodos() {\n      let res = yield axios.get(\"https://dummyjson.com/todos\");\n      self.todoList = res.data.todos;\n\n      console.log(\"mox\", res.data.todos);\n\n      return res.data.todos;\n    }),\n  }))\n\n  .views((self) => ({\n    getTodo() {\n      return toJS(self.todoList);\n    },\n  }));\n\nconst store = MobxStore.create({});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC;EACvBC,EAAE,EAAEJ,KAAK,CAACK,MAAM;EAChBH,IAAI,EAAEF,KAAK,CAACM,MAAM;EAClBC,SAAS,EAAEP,KAAK,CAACQ,OAAO;EACxBC,MAAM,EAAET,KAAK,CAACK;AAChB,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAGV,KAAK,CACpBG,KAAK,CAAC;EACLQ,QAAQ,EAAEX,KAAK,CAACY,KAAK,CAACV,IAAI;AAC5B,CAAC,CAAC,CAEDW,OAAO,CAAEC,IAAI,KAAM;EAClBC,SAAS,EAAEhB,IAAI,CAAC,UAAUgB,SAASA,CAAA,EAAG;IACpC,IAAIC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,6BAA6B,CAAC;IACxDH,IAAI,CAACH,QAAQ,GAAGK,GAAG,CAACE,IAAI,CAACC,KAAK;IAE9BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEL,GAAG,CAACE,IAAI,CAACC,KAAK,CAAC;IAElC,OAAOH,GAAG,CAACE,IAAI,CAACC,KAAK;EACvB,CAAC;AACH,CAAC,CAAC,CAAC,CAEFG,KAAK,CAAAC,EAAA,GAAET,IAAI,KAAM;EAChBU,OAAOA,CAAA,EAAG;IACR,OAAO1B,IAAI,CAACgB,IAAI,CAACH,QAAQ,CAAC;EAC5B;AACF,CAAC,CAAC,CAAC;AAACc,GAAA,GApBAf,SAAS;AAsBf,MAAMgB,KAAK,GAAGhB,SAAS,CAACiB,MAAM,CAAC,CAAC,CAAC,CAAC;AAElC,eAAeD,KAAK;AAAC,IAAAH,EAAA,EAAAE,GAAA;AAAAG,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}