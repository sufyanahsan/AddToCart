{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/Task/task/src/UseMobx/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport store from \"../Mobx/Mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todo, setTodo] = useState([]);\n  useEffect(() => {\n    async function load() {\n      let data = await store.load();\n      setTodo(data);\n    }\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Data from Api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), todo.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.todo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TodoList, \"4iPjF1Dk4tBAVioxtSV8zxHVK4I=\");\n_c = TodoList;\nexport default TodoList;\n\n// const StyledDiv = styled.div`\n//   margin: 20px;\n//   padding: 10px;\n//   border: 2px solid orange;\n//   width: 600px;\n//   border-radius: 20px;\n\n//   h1 {\n//     color: brown;\n//     border: 3px solid blue;\n//     width: 290px;\n//     border-radius: 10px;\n//   }\n\n//   li {\n//     font-family: \"Courier New\", Courier, monospace;\n//     font-size: larger;\n//   }\n// `;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","store","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","todo","setTodo","load","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["/home/enigmatix/Desktop/Task/task/src/UseMobx/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport store from \"../Mobx/Mobx\";\n\nfunction TodoList() {\n  const [todo, setTodo] = useState([]);\n\n  useEffect(() => {\n    async function load() {\n      let data = await store.load();\n      setTodo(data);\n    }\n    load();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <h1>Get Data from Api</h1>\n        {todo.map((item, index) => {\n          return <li key={index}>{item.todo}</li>;\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default TodoList;\n\n// const StyledDiv = styled.div`\n//   margin: 20px;\n//   padding: 10px;\n//   border: 2px solid orange;\n//   width: 600px;\n//   border-radius: 20px;\n\n//   h1 {\n//     color: brown;\n//     border: 3px solid blue;\n//     width: 290px;\n//     border-radius: 10px;\n//   }\n\n//   li {\n//     font-family: \"Courier New\", Courier, monospace;\n//     font-size: larger;\n//   }\n// `;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,eAAeU,IAAIA,CAAA,EAAG;MACpB,IAAIC,IAAI,GAAG,MAAMV,KAAK,CAACS,IAAI,EAAE;MAC7BD,OAAO,CAACE,IAAI,CAAC;IACf;IACAD,IAAI,EAAE;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACzBR,IAAI,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACzB,oBAAOhB,OAAA;UAAAS,QAAA,EAAiBM,IAAI,CAACV;QAAI,GAAjBW,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAkB;MACzC,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACL;AAEP;AAACT,EAAA,CArBQD,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AAuBjB,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}